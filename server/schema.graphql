type Query {
  job(id: ID!): Job
  jobs: [Job]
  company(id: ID!): Company
  users: [User]
  me(id: ID!): User
}

type Mutation {
  signin(input: SigninInput): AuthPayload
  createJob(input: CreateJobInput): Job
}

type AuthPayload {
  user: User!
  token: String!
}

type User {
  id: ID! # -> required
  company: Company!
  email: String!
  password: String!
}

type Company {
  id: ID! # ! -> required
  name: String
  description: String
  jobs: [Job]
}

type Job {
  id: ID! # ! -> required
  title: String
  company: Company!
  description: String
}

input CreateJobInput {
  title: String
  description: String
}

input SigninInput {
  email: String
  password: String
}